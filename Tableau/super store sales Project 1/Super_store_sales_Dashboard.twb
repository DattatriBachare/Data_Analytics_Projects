<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SingleValuePerNestSorting />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
        <calculation class='tableau' formula='5.' />
        <range granularity='1.0' max='20.0' min='1.0' />
      </column>
      <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Segment&quot;'>
        <calculation class='tableau' formula='&quot;Segment&quot;' />
        <members>
          <member value='&quot;Category&quot;' />
          <member value='&quot;Sub-Category&quot;' />
          <member value='&quot;City&quot;' />
          <member value='&quot;Segment&quot;' />
          <member value='&quot;Country&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Orders' inline='true' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Orders' name='textscan.0jww5bw1yh9ibm1130o3900e8yky'>
            <connection class='textscan' directory='E:/Project/Tableau/super store sales Project 1' filename='Orders.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation all='true' name='Orders.csv+' type='union'>
            <columns header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Row ID' />
              <column datatype='string' name='Order ID' />
              <column datatype='date' name='Order Date' />
              <column datatype='date' name='Ship Date' />
              <column datatype='string' name='Ship Mode' />
              <column datatype='string' name='Customer ID' />
              <column datatype='string' name='Customer Name' />
              <column datatype='string' name='Segment' />
              <column datatype='string' name='Country' />
              <column datatype='string' name='City' />
              <column datatype='string' name='State' />
              <column datatype='integer' name='Postal Code' />
              <column datatype='string' name='Region' />
              <column datatype='string' name='Product ID' />
              <column datatype='string' name='Category' />
              <column datatype='string' name='Sub-Category' />
              <column datatype='string' name='Product Name' />
              <column datatype='real' name='Sales' />
              <column datatype='integer' name='Quantity' />
              <column datatype='real' name='Discount' />
              <column datatype='real' name='Profit' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders.csv' table='[Orders#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders 2015.csv' table='[Orders 2015#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders 2016.csv' table='[Orders 2016#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Order 2017.csv' table='[Order 2017#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Managers.csv' table='[Managers#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Returns.csv' table='[Returns#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders.csv+].[Category]' />
          <map key='[City]' value='[Orders.csv+].[City]' />
          <map key='[Country]' value='[Orders.csv+].[Country]' />
          <map key='[Customer ID]' value='[Orders.csv+].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders.csv+].[Customer Name]' />
          <map key='[Discount]' value='[Orders.csv+].[Discount]' />
          <map key='[Order Date]' value='[Orders.csv+].[Order Date]' />
          <map key='[Order ID (Returns.csv)]' value='[Returns.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders.csv+].[Order ID]' />
          <map key='[Person]' value='[Managers.csv].[Person]' />
          <map key='[Postal Code]' value='[Orders.csv+].[Postal Code]' />
          <map key='[Product ID]' value='[Orders.csv+].[Product ID]' />
          <map key='[Product Name]' value='[Orders.csv+].[Product Name]' />
          <map key='[Profit]' value='[Orders.csv+].[Profit]' />
          <map key='[Quantity]' value='[Orders.csv+].[Quantity]' />
          <map key='[Region (Managers.csv)]' value='[Managers.csv].[Region]' />
          <map key='[Region]' value='[Orders.csv+].[Region]' />
          <map key='[Returned]' value='[Returns.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders.csv+].[Row ID]' />
          <map key='[Sales]' value='[Orders.csv+].[Sales]' />
          <map key='[Segment]' value='[Orders.csv+].[Segment]' />
          <map key='[Ship Date]' value='[Orders.csv+].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders.csv+].[Ship Mode]' />
          <map key='[State]' value='[Orders.csv+].[State]' />
          <map key='[Sub-Category]' value='[Orders.csv+].[Sub-Category]' />
          <map key='[Table Name]' value='[Orders.csv+].[Table Name]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Orders.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Managers.csv)]</local-name>
            <parent-name>[Managers.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Returns.csv)]</local-name>
            <parent-name>[Returns.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Status' datatype='string' name='[Calculation_521573184158097408]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Profit] &gt; 0 then &quot;Profit&quot;&#13;&#10;ELSEIF [Profit] &lt; 0 then &quot;Loss&quot;&#13;&#10;ELSE &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='running sum of profit' datatype='real' name='[Calculation_521573184159080449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(sum([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='condition' datatype='string' name='[Calculation_521573184163971074]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Category&quot; then [Category]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Segment&quot; then [Segment]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Country&quot; then [Country]&#13;&#10;ELSE [City]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer ID (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Customer ID]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;quantity high&quot;'>
            <value>&quot;AH-10690&quot;</value>
            <value>&quot;AP-10915&quot;</value>
            <value>&quot;BF-11170&quot;</value>
            <value>&quot;CB-12025&quot;</value>
            <value>&quot;CK-12205&quot;</value>
            <value>&quot;CK-12595&quot;</value>
            <value>&quot;CL-12565&quot;</value>
            <value>&quot;DR-12880&quot;</value>
            <value>&quot;EH-13765&quot;</value>
            <value>&quot;EP-13915&quot;</value>
            <value>&quot;GT-14710&quot;</value>
            <value>&quot;JD-15895&quot;</value>
            <value>&quot;JL-15835&quot;</value>
            <value>&quot;KB-16585&quot;</value>
            <value>&quot;KL-16645&quot;</value>
            <value>&quot;LA-16780&quot;</value>
            <value>&quot;LC-16870&quot;</value>
            <value>&quot;MA-17560&quot;</value>
            <value>&quot;MS-17365&quot;</value>
            <value>&quot;NS-18640&quot;</value>
            <value>&quot;PK-19075&quot;</value>
            <value>&quot;PP-18955&quot;</value>
            <value>&quot;RL-19615&quot;</value>
            <value>&quot;SC-20725&quot;</value>
            <value>&quot;SH-19975&quot;</value>
            <value>&quot;SJ-20125&quot;</value>
            <value>&quot;SV-20365&quot;</value>
            <value>&quot;WB-21850&quot;</value>
            <value>&quot;XP-21865&quot;</value>
            <value>&quot;ZC-21910&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;sales  high&quot;'>
            <value>&quot;SM-20320&quot;</value>
            <value>&quot;TA-21385&quot;</value>
            <value>&quot;TC-20980&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='None' caption='Profit (bin)' datatype='integer' name='[Profit (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Profit]' peg='0' size='250' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Art&quot;'>
            <value>&quot;Art&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column caption='Managers.csv' datatype='table' name='[__tableau_internal_object_id__].[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]' role='measure' type='quantitative' />
      <column caption='Orders.csv' datatype='table' name='[__tableau_internal_object_id__].[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]' role='measure' type='quantitative' />
      <column caption='Returns.csv' datatype='table' name='[__tableau_internal_object_id__].[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]' role='measure' type='quantitative' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Nagetive profit' name='[Customer ID Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10600&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AF-10885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10465&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AO-10810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AT-10435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AW-10840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AW-10930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AY-10555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BB-10990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BK-11260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BN-11470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BO-11425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BW-11065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CD-11980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CG-12040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CJ-11875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CK-12760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-11935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CP-12340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CV-12805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CY-12745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DA-13450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DC-12850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DD-13570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DF-13135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DH-13675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-12985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-12925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-13495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DM-12955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DO-13435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DV-13045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EA-14035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EC-14050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EG-13900&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-13945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EK-13795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EL-13735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-13810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-13960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14200&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ER-13855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FW-14395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GB-14530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GG-14650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GP-14740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GT-14635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GT-14755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GW-14605&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HA-14920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HD-14785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HF-14995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-14965&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HH-15010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HJ-14875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HZ-14950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JA-15970&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-15925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-15340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-15790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-16180&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JJ-15760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15325&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JR-15670&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JR-15700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15940&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-16030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-15955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KL-16555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KN-16390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KN-16450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KS-16300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KW-16570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LB-16735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LB-16795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-17050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LD-16855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LF-17185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-16750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-17020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LM-17065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LP-17080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LR-17035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-16945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-17230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LT-16765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-16825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-18100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MD-17350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MD-17860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-17725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-18010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MF-17665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-18145&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-18205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MK-17905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-17410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-18265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-17920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-18055&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-18280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MO-17500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MO-17950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MT-18070&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MY-18295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MZ-17335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NB-18580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NF-18385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NF-18475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NR-18550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ON-18715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;OT-18730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PC-19000&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PF-19120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PH-18790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PK-18910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PL-18925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-18850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-19195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PS-18760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PT-19090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RE-19405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RH-19555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RO-19780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RP-19270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RR-19315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RS-19870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SB-20290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20770&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20890&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SH-20395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SJ-20215&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SJ-20500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SN-20560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SO-20335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SR-20425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ST-20530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TD-20995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TN-21040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TP-21415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21085&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21610&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TT-21265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VF-21715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VG-21805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VM-21835&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VP-21760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VS-21820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VT-21700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VW-21775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ZC-21910&quot;' />
        </groupfilter>
      </group>
      <group caption='higher sales' name='[Customer ID Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HL-15040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KL-16645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19360&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20095&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SE-20110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TA-21385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-20980&quot;' />
        </groupfilter>
      </group>
      <group delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Customer ID Set]' function='reference' />
          <groupfilter field='[Customer ID Set 2]' function='reference' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/91779/AppData/Local/Temp/TableauTemp/#TableauTemp_0id4nlq0sc14qr1550tb209uimzc.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/01/2025 10:33:21 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Orders.csv_484A9A2C1C21428F876A13535DE54AC6' table='[Extract].[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]' type='table' />
            <relation name='Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24' table='[Extract].[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]' type='table' />
            <relation name='Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7' table='[Extract].[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]' type='table' />
          </relation>
          <cols>
            <map key='[Category]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Category]' />
            <map key='[City]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[City]' />
            <map key='[Country]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Country]' />
            <map key='[Customer ID]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Customer Name]' />
            <map key='[Discount]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Discount]' />
            <map key='[Order Date]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Order Date]' />
            <map key='[Order ID (Returns.csv)]' value='[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7].[Order ID]' />
            <map key='[Order ID]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Order ID]' />
            <map key='[Person]' value='[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24].[Person]' />
            <map key='[Postal Code]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Postal Code]' />
            <map key='[Product ID]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Product ID]' />
            <map key='[Product Name]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Product Name]' />
            <map key='[Profit]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Profit]' />
            <map key='[Quantity]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Quantity]' />
            <map key='[Region (Managers.csv)]' value='[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24].[Region]' />
            <map key='[Region]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Region]' />
            <map key='[Returned]' value='[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7].[Returned]' />
            <map key='[Row ID]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Row ID]' />
            <map key='[Sales]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Sales]' />
            <map key='[Segment]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Segment]' />
            <map key='[Ship Date]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Ship Mode]' />
            <map key='[State]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[State]' />
            <map key='[Sub-Category]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Sub-Category]' />
            <map key='[Table Name]' value='[Orders.csv_484A9A2C1C21428F876A13535DE54AC6].[Table Name]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3212</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders.csv+</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders.csv+</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1449</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2011</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3501</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4166</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>22</ordinal>
              <family>Managers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Managers.csv)]</local-name>
              <parent-name>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>23</ordinal>
              <family>Managers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns.csv)]</local-name>
              <parent-name>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>25</ordinal>
              <family>Returns.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Customer ID (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;quantity high&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sales  high&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_521573184158097408' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Customer ID (group)' />
        <field-sort-custom-order field='Profit (bin)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Segment&quot;'>
          <calculation class='tableau' formula='&quot;Segment&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Managers.csv' id='Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24'>
            <properties context=''>
              <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Managers.csv' table='[Managers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24' table='[Extract].[Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24]' type='table' />
            </properties>
          </object>
          <object caption='Orders.csv' id='Orders.csv_484A9A2C1C21428F876A13535DE54AC6'>
            <properties context=''>
              <relation all='true' name='Orders.csv+' type='union'>
                <columns header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Row ID' />
                  <column datatype='string' name='Order ID' />
                  <column datatype='date' name='Order Date' />
                  <column datatype='date' name='Ship Date' />
                  <column datatype='string' name='Ship Mode' />
                  <column datatype='string' name='Customer ID' />
                  <column datatype='string' name='Customer Name' />
                  <column datatype='string' name='Segment' />
                  <column datatype='string' name='Country' />
                  <column datatype='string' name='City' />
                  <column datatype='string' name='State' />
                  <column datatype='integer' name='Postal Code' />
                  <column datatype='string' name='Region' />
                  <column datatype='string' name='Product ID' />
                  <column datatype='string' name='Category' />
                  <column datatype='string' name='Sub-Category' />
                  <column datatype='string' name='Product Name' />
                  <column datatype='real' name='Sales' />
                  <column datatype='integer' name='Quantity' />
                  <column datatype='real' name='Discount' />
                  <column datatype='real' name='Profit' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders.csv' table='[Orders#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders 2015.csv' table='[Orders 2015#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Orders 2016.csv' table='[Orders 2016#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Order 2017.csv' table='[Order 2017#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders.csv_484A9A2C1C21428F876A13535DE54AC6' table='[Extract].[Orders.csv_484A9A2C1C21428F876A13535DE54AC6]' type='table' />
            </properties>
          </object>
          <object caption='Returns.csv' id='Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7'>
            <properties context=''>
              <relation connection='textscan.0jww5bw1yh9ibm1130o3900e8yky' name='Returns.csv' table='[Returns#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7' table='[Extract].[Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Managers.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_484A9A2C1C21428F876A13535DE54AC6' />
            <second-end-point object-id='Managers.csv_FDACD428D4CF47E1B67C1C2B49CAAC24' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_484A9A2C1C21428F876A13535DE54AC6' />
            <second-end-point object-id='Returns.csv_36D112D415D54EAC98EA2FFCC437C4D7' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_F4EA7EE6D60B47EE9545AFCE03520AFE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]</rows>
        <cols>([federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk] / [federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{3EDCF7AA-DBEA-4EAF-B4CE-B2607EFA9A05}' />
    </worksheet>
    <worksheet name='Bubble chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='222' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]' />
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EFF56DFD-46CF-4DCE-BF0F-61F08446C4D8}' />
    </worksheet>
    <worksheet name='Calculated field'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column caption='running sum of profit' datatype='real' name='[Calculation_521573184159080449]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(sum([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_521573184159080449]' derivation='User' name='[usr:Calculation_521573184159080449:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]' value='96' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='78' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[usr:Calculation_521573184159080449:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]</rows>
        <cols>([federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[mn:Order Date:ok] / [federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{D27C35A9-A66D-44AC-AA25-7F2050B37D4C}' />
    </worksheet>
    <worksheet name='Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]</rows>
        <cols>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]</cols>
        <show-full-range>
          <column>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Profit (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{E81887BB-7CC9-4535-B4CA-A4DF146B5D19}' />
    </worksheet>
    <worksheet name='Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
              <calculation class='tableau' formula='5.' />
              <range granularity='1.0' max='20.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]</rows>
        <cols>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]</cols>
      </table>
      <simple-id uuid='{8DB0EACC-E17A-49B0-97F9-4EFCAED838FC}' />
    </worksheet>
    <worksheet name='Parameters with condition'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Segment&quot;'>
              <calculation class='tableau' formula='&quot;Segment&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column caption='condition' datatype='string' name='[Calculation_521573184163971074]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Category&quot; then [Category]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Segment&quot; then [Segment]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Country&quot; then [Country]&#13;&#10;ELSE [City]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_521573184163971074]' derivation='None' name='[none:Calculation_521573184163971074:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]</rows>
        <cols>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Calculation_521573184163971074:nk]</cols>
      </table>
      <simple-id uuid='{957EF43F-1B54-4E86-BFB4-FB31B738F0D3}' />
    </worksheet>
    <worksheet name='Pie chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Sales by Category</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' />
              <size column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[pcto:sum:Sales:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FB533940-4920-48AE-9DB5-2B931818DFEB}' />
    </worksheet>
    <worksheet name='Scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Customer ID (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer ID]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;quantity high&quot;'>
                  <value>&quot;AH-10690&quot;</value>
                  <value>&quot;AP-10915&quot;</value>
                  <value>&quot;BF-11170&quot;</value>
                  <value>&quot;CB-12025&quot;</value>
                  <value>&quot;CK-12205&quot;</value>
                  <value>&quot;CK-12595&quot;</value>
                  <value>&quot;CL-12565&quot;</value>
                  <value>&quot;DR-12880&quot;</value>
                  <value>&quot;EH-13765&quot;</value>
                  <value>&quot;EP-13915&quot;</value>
                  <value>&quot;GT-14710&quot;</value>
                  <value>&quot;JD-15895&quot;</value>
                  <value>&quot;JL-15835&quot;</value>
                  <value>&quot;KB-16585&quot;</value>
                  <value>&quot;KL-16645&quot;</value>
                  <value>&quot;LA-16780&quot;</value>
                  <value>&quot;LC-16870&quot;</value>
                  <value>&quot;MA-17560&quot;</value>
                  <value>&quot;MS-17365&quot;</value>
                  <value>&quot;NS-18640&quot;</value>
                  <value>&quot;PK-19075&quot;</value>
                  <value>&quot;PP-18955&quot;</value>
                  <value>&quot;RL-19615&quot;</value>
                  <value>&quot;SC-20725&quot;</value>
                  <value>&quot;SH-19975&quot;</value>
                  <value>&quot;SJ-20125&quot;</value>
                  <value>&quot;SV-20365&quot;</value>
                  <value>&quot;WB-21850&quot;</value>
                  <value>&quot;XP-21865&quot;</value>
                  <value>&quot;ZC-21910&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;sales  high&quot;'>
                  <value>&quot;SM-20320&quot;</value>
                  <value>&quot;TA-21385&quot;</value>
                  <value>&quot;TC-20980&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]' />
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Customer ID (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Quantity:qk]</rows>
        <cols>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{33C4C287-D0BC-4D37-AE9F-10B5BD83583D}' />
    </worksheet>
    <worksheet name='Sets'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer ID Set 2]' derivation='InOut' name='[io:Customer ID Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID Set]' derivation='InOut' name='[io:Customer ID Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]' direction='DESC' measure-to-sort-by='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Set 1:nk]' shelf='rows' />
          </single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk] / ([federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Customer ID Set:nk] / ([federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Customer ID Set 2:nk] / [federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Set 1:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{A65353A5-8B35-43B6-BC28-0B5D216BF1CC}' />
    </worksheet>
    <worksheet name='Tree map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' />
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{59234AF5-60F0-4CB2-AE62-D1D226ED0673}' />
    </worksheet>
    <worksheet name='map chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Longitude (generated)]' field-type='quantitative' max='-6401284.7620610567' min='-14477742.877139872' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Latitude (generated)]' field-type='quantitative' max='8054294.9383676387' min='1976135.8574677666' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Latitude (generated)]</rows>
        <cols>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4832952B-3099-4B76-94B8-A3234FE576D2}' />
    </worksheet>
    <worksheet name='word cloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders' name='federated.0p0iodn1rrfdja1fqtyf60fhcsvp' />
          </datasources>
          <datasource-dependencies datasource='federated.0p0iodn1rrfdja1fqtyf60fhcsvp'>
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Art&quot;'>
                  <value>&quot;Art&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='Count' name='[cnt:Sub-Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Sub-Category (group)]' />
              <size column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[cnt:Sub-Category:qk]' />
              <text column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Sub-Category:nk]' />
              <lod column='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F8F0BB4F-FB43-49C3-9D48-5D0901AD5668}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='860' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97830' id='7' param='horz' type-v2='layout-flow' w='98136' x='932' y='1085'>
            <zone h='97830' id='5' type-v2='layout-basic' w='83101' x='932' y='1085'>
              <zone h='37057' id='3' name='Bubble chart' w='36813' x='932' y='1085'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51681' id='9' name='Pie chart' w='23903' x='37745' y='1085'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51681' id='12' name='Tree map' w='22385' x='61648' y='1085'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46149' id='14' name='map chart' w='46288' x='37745' y='52766'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30387' id='16' name='Scatter' w='36813' x='932' y='38142'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30386' id='18' name='word cloud' w='36813' x='932' y='68529'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='129' h='97830' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='15035' x='84033' y='1085'>
              <zone fixed-size='139' h='19945' id='8' is-fixed='true' name='Bubble chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]' type-v2='color' w='15035' x='84033' y='1085'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='121' h='17503' id='10' is-fixed='true' name='Pie chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' type-v2='color' w='15035' x='84033' y='21030'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6919' id='11' name='Pie chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type-v2='size' w='15035' x='84033' y='38533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='87' h='12890' id='13' is-fixed='true' name='Tree map' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type-v2='color' w='15035' x='84033' y='45452'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12487' id='15' name='map chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]' type-v2='color' w='15035' x='84033' y='58342'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='127' h='18317' id='17' is-fixed='true' name='Scatter' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Customer ID (group)]' type-v2='color' w='15035' x='84033' y='70829'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9769' id='19' name='word cloud' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Sub-Category (group)]' type-v2='color' w='15035' x='84033' y='89146'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#ff8e3d' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97830' id='27' param='vert' type-v2='layout-flow' w='98136' x='932' y='1085'>
                <zone fixed-size='280' h='37057' id='3' is-fixed='true' name='Bubble chart' w='36813' x='932' y='1085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='139' h='19945' id='8' name='Bubble chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]' type-v2='color' w='15035' x='84033' y='1085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51681' id='9' is-fixed='true' name='Pie chart' w='23903' x='37745' y='1085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' h='17503' id='10' name='Pie chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' type-v2='color' w='15035' x='84033' y='21030'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6919' id='11' name='Pie chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type-v2='size' w='15035' x='84033' y='38533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51681' id='12' is-fixed='true' name='Tree map' w='22385' x='61648' y='1085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='12890' id='13' name='Tree map' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type-v2='color' w='15035' x='84033' y='45452'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='30387' id='16' is-fixed='true' name='Scatter' w='36813' x='932' y='38142'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='18317' id='17' name='Scatter' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Customer ID (group)]' type-v2='color' w='15035' x='84033' y='70829'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46149' id='14' is-fixed='true' name='map chart' w='46288' x='37745' y='52766'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12487' id='15' name='map chart' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]' type-v2='color' w='15035' x='84033' y='58342'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='30386' id='18' is-fixed='true' name='word cloud' w='36813' x='932' y='68529'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9769' id='19' name='word cloud' pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Sub-Category (group)]' type-v2='color' w='15035' x='84033' y='89146'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6BDEDD96-D6CA-44BC-8C21-F0AEC3491A8B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Bubble chart'>
          <zoom type='fit-width' />
          <highlight field='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Pie chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Scatter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Tree map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='word cloud'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Sub-Category (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <device-preview visible='true'>
        <device is-portrait='false' name='Large Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{FC2273BC-0F35-46AE-943F-3645A501162D}' />
    </window>
    <window class='worksheet' name='Bubble chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{697983AD-F880-4688-8288-DFE42303FF00}' />
    </window>
    <window class='worksheet' name='Tree map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65970D59-A61A-4C7B-9B32-D29D28AE197C}' />
    </window>
    <window class='worksheet' name='Pie chart'>
      <cards>
        <edge name='left'>
          <strip size='116'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Region (Managers.csv):nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Region:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1F905B-2BC8-413D-9FC9-667B9082FA2C}' />
    </window>
    <window class='worksheet' name='map chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:City:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1C58A4F-A9B6-4553-BF27-4F3234593001}' />
    </window>
    <window class='worksheet' name='Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Customer ID (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Order ID:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D12EFC67-83DF-4269-A37A-A29E28A15387}' />
    </window>
    <window class='worksheet' name='Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[Customer ID (group)]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Profit (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55709375-B900-4CF6-8639-0B80C21B626B}' />
    </window>
    <window class='worksheet' name='Sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Customer ID Set 2:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Customer ID Set:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[io:Set 1:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Customer ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE389E87-4CF8-417D-898F-492CC900EDBD}' />
    </window>
    <window class='worksheet' name='Bar chart'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Order ID (Returns.csv):nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Region:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Segment:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Sub-Category:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BFEA5C3-6B48-4701-842E-BD3FA3FF29C8}' />
    </window>
    <window class='worksheet' name='word cloud'>
      <cards>
        <edge name='left'>
          <strip size='120'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Category:nk]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15523931-7EBA-4885-BD71-71C616935543}' />
    </window>
    <window class='worksheet' name='Calculated field'>
      <cards>
        <edge name='left'>
          <strip size='104'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[:Measure Names]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[mn:Order Date:ok]</field>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71029495-DBA6-449D-845E-05DFAA2B8E03}' />
    </window>
    <window class='worksheet' name='Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77F51D71-908C-4377-97CF-B2B5ED214659}' />
    </window>
    <window class='worksheet' name='Parameters with condition'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p0iodn1rrfdja1fqtyf60fhcsvp].[none:Calculation_521573184163971074:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B88E50DD-45E6-4A2B-91B2-0EF0E31989F3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar chart' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bubble chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Calculated field' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Groups' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Parameters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Parameters with condition' width='192'>
      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
      uuGalgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pie chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXw0lEQVR4nO3deXxU5aHw8d+ZPclMMslkDyQhIWELUBBQUepWpYi3uEBrVereSr29t+/b
      T2+97dtbe+29t9fa2s1ba2tVBEUQUERURJYgqxJ2AoEEyL5NMjOZfTnn/sEiWvUVJmSSeZ7v
      X4RMznnOfM5vzjJn5iiapmlIkoAURVF0iR6EJCWSDEASmgxAEpoMQBKaDEASmgxAEpoMQBKa
      DEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxA
      EpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKa
      DEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxA
      EpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKa
      DEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxA
      EpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKa
      DEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxA
      EpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKa
      DEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmiHR
      AxCZFo2iBgIQiRBRNbwGC3q9DovJgMVkQFGURA8x6ckALrKY10ukqYloWxuRllaiHR1EO7uI
      uVyofj9oGmga7sISHrOMJ8qpld5o0JOeaiLHnkZeVhpF2ekUZtsYnptOocOGXi833v1BBtCf
      NI2Y10ekuZlwQwPBAweJnDyJ6vejhcOgqp/9t7EYMVUjdubHcJRgOEqny8/BE10AGPU6zCYD
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3xUeXrv+T2VS1WlUs45oCxAgMg5Nd1093QO0z09PR7P9Thde+211177
      7niv155rez3rnXhnxt09nXMmBwECSSAUAEmgnHOuUuUT7guJ1NAwwCAEnO/nwwuqzjn/55TO
      c/7p+T2PoCiKgorKfYggCILmThuhonInUR1A5b5GdQCVOYXf75/V9lQHUJlTjI6Ozmp7qgOo
      3NeoDqByX6M6gMp9jeoAKvc1qgOo3NeoDqByX6M6gMp9jeoAKvc1ukv/4/f7Z30jQkXlUpxO
      56y2J6jRoCpzif7+fmJjY2elLUEQBN31D1NRuVMoTPS3U9PQRnhSNvkZCYx1naWmsRtFoyW3
      aAUJYWYAfM5xKqtqiEyfz7yEcAQBZNFHXW0VyQUrCJInOF1zinGvhvxFi4m2T5+nzgFU5iz+
      qQlqzraRnJFJZ/VR2oadHK86Tcq8bHJzcgi16C8c2zc5hi02ibpDO+hx+kBR6Kot5eDhEnoc
      4BwfxRgST2ZyOLu+2IFfnB74qD2AypxFbwlh3fqNCEqAtmodOq2WkZ6zjLolErOKWBMfd+HY
      aHcrKfO2kCJ3UNbpICY1QEU3rM6fPiYsLp2wWJnB9jOYbXY0M69+tQdQmbMIAvgcA3zw1tuE
      FqwiOczMN7//tzzz1GOEOWvZVdZx4diAz4sgQJDFgt/v5/CeQ6zZtAZFlpEkCUXxcmzHx3xR
      Uk1EdAJaYfo81QFU5iyS18Ge/cdY/Y3nWZQRgyCIeH0yeoOJ5OxMfGOTF47VRsThk2Q6OwaJ
      Chfw+WQOfPoeB8pOcbTkMJNeDUu3Pc7vfeclhttO4vJLwHWGQJLfw8jYBILORFhYCAH3BFM+
      DeFhdjSCgmNsmIAmiDC7FUEAUAh43YxPONAYLYSF2BAUibHRUSSNiYgwO3LAy/j4BBIa7KFh
      mA1aPFOTTDo9mGwhhFjNSAEvo2MTGIKCsVuDZq59Y8hSgIAkYDTMrVFewOcDnR69dm69e/we
      D1qzGe2dNuQSnGPdtDa1MeZ4C7Cw+YlNNO/fT/ukE1HW8+CTz9LfVMNEUCpBYjj7Xn0FbXA8
      z66Iwfz8CwDUHzGhz9/AZHMpn1a3oCgK1rgczPrpO73GMqiP93/2Y5T4HIyyh8zFWxgo/TEf
      VCr8/T/+DfEmJ//xV3/BufD1/PRvXkAjgOR1svOLT5CNoXQ3NbD4se8S3HWA/W0yFlc3aRu/
      RZrcRHW7A2Wqn34pnhe3ZvHJnjIiQ4M5VXuOl/7sv3Lqs1cY1IYz0TfMI9/6NmkRlhv+8Sb6
      G2kaMFK8MOUmf/7bQ9vJCqTkXDIjg++0KZdRs2svCdu2EHmH7biRZVBF8lJ5vIqcxSuwGW78
      LXmdZVAnp5od/PHzG4gNmV4yGtDbyUkTaO4Ywm7pwpSaj8l9sWFBH8SmR57BpNOwa6SO/pFJ
      jh2p5/m//D+xO0/xL28eZv1fPk1Svsxoywl+tbMJxbKeZ59/Hr3kpvn4QfoHB6nqDvCXf/00
      jXteoby2i7RNOTd8c+fxjPZxuqWdqUkH1rgcluSloLmJHuV3zWRnA3WDUzjHRknMXkxeyp1+
      9KbpPVdFx7gPx6SL/MXLSYyw3mmTvhZBa6J4xcpbusY1+uEwXnxmGR++/mve+HAXY24RgNSM
      dHo7Omhs6iM3OwkBmBxop/x4JSMuEZ3sYc+Hv6FDm8eG+aGM+zTYtBq0Nhu+8XEIuDnwxXv8
      6t09FCwpxhZkQpro441f/4LIFc+THjyFVzFjEsBsC8Ix7rilGxS9bgLGUNZu3ExgvBNpjmz7
      +Rxj6KPS2bRuBWMDnXfanAu4JyeISC9kzYJk+ocn7rQ5t52vdwBFIGvpNv7oD79HmtTIR0fO
      ARAan4I00EbTqJfEiOluXGc0E2IPRo+Pz17/Jc7IxXz3he3YTVbCjDIOSUZyOjCFhYE+iI0P
      P8uffP9ZTh3YxehoHz/+j1+Rs+UFnttWjElvwyx48Mjgcbqxh97qUEGDPSQEnVaHQa+FOeIA
      oCUs1I5Go0OnmzvzAa3OiD3Yik6vRzMXusrbzNcPgfwjvPvOLoJC7fT1+ChcGIP3FAimCOLM
      3VR7lrDNPP0DWUJjyAmLwT3SxrET51gSnc2end2kzV/Bg+sLeO/N9why97H+oRepPriD1gk/
      gm+ckMR0HK0naJ6QyW6oZEejjqIVa1iSbODNN9/COezhsW8nz9ZvoXJXoNDVcBJj8hKiL5ka
      jg0PcryyltziVSRFWPBP9nP4WDWWmAyWLsxCJ8DUSBddU0ZyU6IvnPf1k2BFweN24vL40RnM
      2G0W/F4Xgt4MATd+DATpFaa8MjaLeXrrWQowOTF5YZhhttoJMmhwTE4ga4zYgy3Ifi+OKRcy
      WmzBwWhlP5NO18yLWcAWEoqOAJOTU+hNFqxBpptcBRIRZdBpQFIE9Dotfr8fvd5wU9f7XSH6
      /aDVIcgiilaPVoCAKGLQ669/8m0k4PWhMRlRAn4EnQGNIhKQBQy62V0Xut4kuOrgx9TWVpP9
      1D+yMvH8p37OHtxLyLxcduw+xlMvPsOON3/NsgeeYLSxHId9AQUhYxwuPc5g2CL++JFi4HqT
      YEHAbAnGfImXGc//R2fFMPNZ8CVzJI1WT2h4xBWXsoeGXzzGaCbMaL7kWzPhl/0fwEhYuPFr
      Tftt0Gh1GGb+ducHGAaD4WuPny10523QXrTlTj/8AHrTzO+tn7FL0GGYOyOzC8xf8whh2kn6
      Lv1QcTM8bCR7fSpLYqtpn/Cj0+oICQvDH6THJeiISCnkiWAzv6lyX3a9OXiLKiqX03u2gldf
      fYuW4Sl0Oh1XdOCCnchkP6/95g2OnW7CL8qkJcfy+buvc6LNRUJcMBqtDs1Vuv65tUukonIV
      4nOW8XLOsmscIZC1eAtZSxT2fvI5SSGT7G4RePH3voOz/xwHamvJeGDNVc9UHUDlLmKK3e98
      RnNnC+4zr6GsWUucMogcWwB91ZRWN5NcuIaooASyk8t54ze/QdAaWbbpQRpP7KGs+iwtoyJv
      i1M8tW3aIVRBjMqc4oZ2ggNuKqvqKVyyBNNNzNUFQRBUB1CZU9xRRZiqCb5/UBQFWZbvtBlX
      MDU1hSRJs9beZQ5gMBhmzftU7iySJOHz+e60GVcgyzJhYWGz1p66DKpy19HXXE3X2JV1BHwT
      fZSeqEWUQfJOULL7C45UNV4S/6XQWHWI9mHPhXNUB1C5q6gr38XRwyU0DHgv/0LxU1Z6kvqG
      KgIS7Pr4Y1KKVmJznuVQdQcAE11nqDheRevwxdQrqgOo3FXkLXuATUuzr/i8p7ULfdpC4oKN
      gEzAFExyZCg58xczNtiK7HdQdrqXFcU5l4l+1H0AlbsK4aqBXDKKNEJ61Dx6atw43T4yIky8
      /uZbmLUKE4Yo6o+XYk/MRpk6xZToICBN6y9UB1C5BxCZHPfT2VJOW3s3cW39LF26ibxVBoba
      aqkf1qLTOpnoOUd3bwu9GlhWmAJc0wECdLd04BIlEDRExiWCc5hhhxuDxU5iXPRlulZZ9NHX
      04Nb1BKfmIDFqEOR/PQOjBIbG4NWgKnxIfpGnETEJRBmNeH3OOjtHUDWW0lOjEXwOWjp7EcB
      zCFRJMfcwmqAouByjDPmcGENiSDEar6jUaAXUGQmx4ZxuAOERkZjNd35QDgARZEYHx7CI2kI
      j4jApJ9L6uDz+Cn98lOaOzsZE4YweleSaZrEETyP/GVryAesZiguSKOv7gjH6jox2WPZsmUD
      wUYNOcBYcxit2iwig6Yf/WtqgusrTzHp9/Dp66+x/S//ic6PfgK5m7B72hkzZPD8I6sxaAVQ
      ZOpKd9HsMmFy99IRiOPl7QvYt/NDXt/Twas//UcMvl5+8eqX5OUlc+rsIC/9/tPU7NyNHBrN
      6LlyLMXPsyhQzk8r/GxfmoYtOoWC9Lirm/ZbMDXcztGqNuLiwhnsHyS3eA3xoZdHnYruCeo6
      R1iQk3HT7dwo/S011HW7iQk309k9yrotm7F+xQd8o+00OYMpSAm/+kV+B3x1GbS19hj9/iDs
      BomRKYEVyxdh/IoPOHsbGDSkkxF5a5G612JkZISIiCsjiq+GIvk4faqezIKFBOlv/O1msViu
      pQk2krekmIFTO9DnPMiKjFC6DWZyi5ayILaYH//w3+les5j08CBAILN4E3lGA101e6kpG0XR
      mlixdTN7S34DgKOtFlfEfDZuWo6780ec6XCyavs3MBo0lA+doGF8ip7JHiyWFHRmO2mJ0V9v
      2nWR6W5uJrN4HelhBjxR5yhr7UMTNIGYWEicUaKmvp7gwARHazoYHh5h+dIlWL/6F/+dI9LW
      McSSVZsIMWlJMJdR2zZKrLuVkNxizFPdtE4E8DaeoHJIYCg7lw1L879m3Pu7xE/boJeNW1ei
      UWSaa8voGZ3E19tBauF8/L2nGDYn01VaQY++k8m8PBZlJ91mm66PoDUyv6jolq5x7TlAYIJX
      3inl23/9D+iEix2FoLUQZYDRiQE6a1uxx2dTNC+WU0c+40DNIE899zxmsxWz2XUhdDU4tRDN
      zg/YsddNZ/84yV4RAx52vfsebb5UXlg9D507lLBRBz1nK/jl6U7+9KUHbzJNh4zbpSUyeDq2
      3RxsR3KP4JEmEUUFxSAx6ZhiflE+OVIYG5cvvKlWbhwfkhSEcUaoYIsIx9vswO2ZJEgGo9+D
      06Vl4YI83GNhrM2PnyW73Gi1IdNLgoIGi83KhMeDc9KBrEDA48CtM7FgUTahpgUsTAyaJbtu
      P9dcBq3a9Rb25U+REXp5l6cEJunxa4gNiSAnN4+U2FBajn3EjrMK3/v+d8iMtl1xLb09hT/+
      k++ysCAba7CFuDArX77+CyYjFvO9Fx8jxKjBbI8kM3MeS5etwN3bjveKq/y2aLHZZUZGpzc8
      HKPDGIJtc2DN14RO58LlnU4wMNrThy1y9nY9vx4rkjiKBKDITIxNYLHeeCqau5Gv7wGmOvjp
      22Us3mLjrTebyF26HMnjYN+n73FC42TemkeJC7OhFYJBFvn4wEEC9iV89sF7hERnsTjbwpHD
      R+gbaOf9d99m48PbqPpiFxOBKZSYJeSHuXijqplMIZr336knJX8VlrFaqrsm8U8Ok7dmOzf/
      nhFIyinkUMleukxGPAEdq9dlox0eZ2/pAToMChOKBZ0xCHm0g/3HJJYvXojltg+BtOTmplG6
      bxdGkw4PwWzbHMyAw0DFwT0YfGMYkosxBkcwWl7BYW8WaxblzMIQSEdBRiR7du3FqFPQhSSR
      FWbBofdw9HAJ4mgH8SuWYA6Jor3sEIK3kAWZCbfZphtD9DgoO3KIEdHG5s1rsBm0oIjUnSjH
      nDyf9Ggr7XUnqG4eYdmGTcSHmIBraoJlAgHxQhIFrVYHioQkKwgaDTqt9uIfRlEQJRFZnlH2
      Chq0WgFRvBjUpNPrkUURGdBpdWhmtLDnm9dodWg1IIoioEGn097aH15RkBUZecZejaABlOlA
      K0FAM/NPlmVkBbRazSw8aDN2yRKyAhqNFo1GQFFkJElGEAQEQTOdZEyWUBDQam6PXV+dBCsz
      dikKaLRaNIIwnVdTnrFLo0EAZGl6VVB7mzLb3cgk+FL6RybxSgphUhs7K2WefWQRkz1n+Ghf
      OamF28ix9nNyQM+GBTG8/ckRXnjhaSJCbNfSBGvQX6Gh1Vx9TC4I6HRXLucZDJcfrfmK9lV/
      FS2sXv870u0KAhpBeyEL8MyH6HSX37JGq53doZEgTMvzLvtIc0VqFK12drdoBEG4ok1Bo0Gn
      +Ypdurm5dRQbYUeRJXoaHIRHJyGLLkpPdLJhZSHtTnC4vSQlphFkjyDbomXQHwDUjTCVewQp
      4KHy8D7GTclsXpHKmX0fYs0sYmqskQmXmUULUjmwbzdnThiYbB/i/AK76gAq9wQdvaPokot5
      IDMGATBHxTIy1E7TQCc9ARH/4kweeuJZtIqPHTv2E62ffvRVB1C5N9BMcqa8mrMVkJS7gjWL
      VpEFjHXH0O6KxK7zcHDHF4x6FPKWbsRy/ezQKvcyc1UQc7OT4JvBYrEId35pXEXlDqJqgu9T
      FEVhLnb+Ho+H8fHxWWtPHQKpzClmOyuEOgRSuYtQcA238e4bv+HLQzWIl7y73WODfPTumxw/
      24OsKIjeSfZ++i7vfLiDEff0hmtfUxVvvfEGVU0DFzZ4VQdQuYvw8OFHB9n61DfJCepkZ3nX
      hW+GvE5WPPg4E7X7aB330niqluy1j/DgshT2HDjGROdpylq8PPnssySHGVUHULkb0RNqNzMy
      NMS4UyIi7GJq8sjJJmKDg1i1OIXGLgd5S9eSaDcwMjxKRGQkrS2N+KcGeO/t9+gc9yKcD8G5
      U7eionLDyAqhoVbOnq6m16EQbL74+J5PpqXT65FlBTng5uiez2hy2tmwNBev10NS4Uq++fxj
      1JWX4AlMJwVTHUDl7sE/SPOAnge2Pcia4gwaTp278FUgPBmnL0DDuT4So62cOboXU+Yatq2Z
      j16A2Jg4JkfHQdBhMRsuDIGuKYk8V1OHIyABGhIycogNMdLX0UL/uJeUedlE2KZDShVZpKet
      iYEJL4npWcSEWlAUid62DoITkgk26vA6hmlo6sAem0ZafDgC4JsapXdUJCU5GkFRGOpqpGcs
      QEZ2NnbzLWplFQXH6AD9Iw5CouKJCrXOCU2wxzGJYrIQNMfqFyuySF9XB1MBDQlJSViMd8a+
      a68CSZwp209tcz8aUwhrtmwh0H6SqYhCorQO9u47gDUuh+0bi9n1zs8YDVgQgIS8FWyYH0/p
      gd10DLnJXLia5YWpaDXXTI4boKOxhSm/h3d+/nO2/9W/Yu3YT3mfiaW5MejsSeSlRgEwcPYY
      x9oDpIbJ7DvazB/80Tc5uX8HH72zl+/86N9ZHKXjf/7bT5m/fgM1hw+y8tnvE+tv5cMPPqJd
      yuYf/+abBHpO8u/vnWbrokiONYv80Xcf4yZKv17AMdDMsdP9zEuPpau1lfSi1SR9pd6w6Bqj
      pm2YJQVZN9/QDTJX6wTXV+xn0hhHpMlPW5+LNWtXYv6KD0x21tBrzCE3xnTb7LjROsF19c1k
      5uZj0t1cneBrDIH0pGTlEOLpQJv/MItj4NCxRrY8so35CxZfePgBIjKKeWzbWjISInBNTSEJ
      Rhav205Bkm26q/H00OoIYdniRWxanEh5VRO26HQe2rIak37a/+qPlZC9djtLVqzBOFpH39QN
      388lyPS0tpFTvIL09ExWLEijqb2P3tMVdEwGkPweKiqP01Zfw/Gyo+w7UsGUb/YSsgKMNZ1k
      58HD7Nr5BZUN3bPa9pX46BqVWbYwl8zs+aSGSnQPj1NTfhy3CGMtx2kYGKPiSAXHSvZyvL7j
      Dts7jaA1UVBYcFMP/3mu3c/5R/n1+5V89wf/HUEcx+3TYbOej/EPUHlgD+1iKE9uXk5nbQnv
      7avlyZdeItSkRzDpLw45zCkUhL7PK29/gGasFU9kEqYgG+ZL9AJTzinMJiOCRosOP16fDLab
      naLIeNw6oqzTt2e02pA9I/hkN6KsoCgyLreXRbOuCb6I6POTlL+EHLtMxalGIPG659w+3Gg1
      5zXBAhaLhTGvF4/LjQxIfjdeMYjFxfmEmRaxJPne0QRf0wHKP/0N8ZteINGqA9FMmNVP34CH
      8BgzoKNg+Xpy0DDVVcFPP2ng7/72TwkxXeWSgpHn//Sv8Xj9nNozTl9szBWHRMdGUTkyhhSw
      45GCsFtvZX6uxR6iMDTsJiI2iImhAYwh4Wg8w7dwzd81AiajAUHwzYF6vMGI4hAioFMkRoZH
      sefOw3nd8+5+rqEJbuc/PztN0Xo7r716kvwVW3j8yQd5/e3/yQm7lYwlW1lbOP3WKis7ik8R
      +OSdNzDawlm/agnlJbup7x1i7IN3ELY9yUTNp3SOibg1obz0SBpnK3ZzsLSc7pYpXv84hm9t
      eZw9//9/8svTZiKXPEDMLaWeEUjKW8ih/Xvp0OnwY2HDhgKEkUl2H9pDq1GDW2dHZ7KiGe9k
      zxE/q5YungVNMGg0GhRBQNBoZ3pI4bbJC397tBTnJ/L5J59j1ClYYrMpCLXgNHs5uGcX8kQ3
      SWuXYwmPo+3gbhTXIopz70z9Zln0U398P8H5D5Jsv/j56EAPe/cdJn/1VvKTw+k5e5xDleew
      RKezZcMKjKKTY4cP0DUmsOHBB4gPne7F1FgglTnF9SbBJw9+QnNjHUnb//6SOsEKfc3l2BIK
      2fn+p2x8+hmm+juJS06jv+4Ip8YjmB/lIxCaTpJ1knc+b+Cbz29Dr7lWnWAVlTnI4g2PEaGd
      oPeyTwNMNA8Sl2llUXIoPQ4fhQmxdLY30dgxRtqCQpKTw1Bkka6GOsLjEy5sgN3pvldF5bpc
      Wif46igo8vS7XKvToCig+KZobe/Eq2iQJBE54OZ4yU7qRoPYvCqP89MutQdQmfNcv06wgbBk
      M16/j7M9DhYs0DDq0rJh4xbGu8+wv/4s5hEfgcgFbCtI4tI1B9UBVO4ipusEdwwN4Tv7GsqK
      NYQ4WtFnrsAWksp7b79DYv5yoi16TpYfY1fvGPqgUFZu2EBv+afUD/bQUiUQmbaQbWsWAOok
      WGWOcWN1gj3UN3WSlZON/iYG81eUSVVRuZsQ9Gby864sl3QjqJrg+xRZlme1Hu9vi9vtJhAI
      zFp76hDoPkVNi3LdAhkqKnMP0efk2IF9DHhNbHpgK+FB07v3Z4/v4WTTELLoZ8HGJ8kK8XG4
      5DATkpk1GzcTbYVTZSU0jSis37SBSNt0qIHaA9yn3J09gELJFx+QWLyNZDt4FRO2y3QjCif2
      fkHk4i3IPXVYUvKxuLrYVTPIskQ4545kZbqWL4/28MQj67DbrGoPoHI3MUl35yQO3w6qBCtr
      N2/BdknZN9HZS78cTlGIEV3YYmTJR+O5XqJjkxidaCAzdxmWcD02fR0BSdUEq9x1iEgaO5sf
      fYqty1OpqKi95DuFhprTZBbmo9MIyH4nh3fvZEQXz8oF6QAXwvM1l8hg1B5A5S4iFHvwFBOu
      ABYE9JfUMxBdg3Q6g9gcPa20qz1aQuT8DeQnTIeM2m3BdHb1EKPV4/QFodNOe8PXzgHEqRHq
      up0UZqeiiC4azvWSk53IudpqBl0K2QULiAu3ThfBUxQmh7uorWvBEpXC/Nx09BpwDnfS6zKT
      lRIFcoBzNScYcOuYX7SQMIuOvpZ6znaOkF6wiORIGz7HACeqzhKemkduajS3FCWvyIwNdNPR
      P0pkQhoJkSFzQhOMIs3oqj0kZWQTGXz75IXX4ooKMXKArpYmJgNaUtMzsF1N1zELXG8VyDXS
      wd4D5YimcDZsXsd4/THc0QuJxcO41si8+Omaa/s+fpUB1/Q9xOcuY21+DGWHDtI9IbNi4yaS
      I2xYr5UcV2PQseft1+idEumq3ElZ2ySVO9+iekggLSGM/t7BC8p6SXJwuKSSmORUWo58TOm5
      ftpqSvjFj3/EBwdPowAN+9/kSKdCtNnFK69+TE/Lcd7dc4rk5Cje/fkvGfZ7eO3nv8AYFUf5
      569z5tY0kUz0NXK8oY/Y2Gg6TpfTfpVAKnFqhLKa+ltq50bpqDtOy0iA+NhwTpbsZewq81Dv
      YCMnmgZn1a66isOMYyXSpuNEWQVu8cpjJjqqqe/3zKpdX8USkcJjzzzHU49uIcyoIAUnkJNg
      JzIp9sLDD7D58Zd58cUXefHFF9mwKBOt0cbqrY/y/DOPkRJhu/By/Vo31xhCePGxIt7/8jCm
      vh6e+pPHqH7vEL5QA4lpOaReElGk0dp46MnHQfJw3O1EQSAhdzmPOvv5uHX6GCngx2SPJD7G
      j+zvRpb8YLARH5+ATvIhutro8iXxX/KzsPWeoKKhg8K4/Jv8mWR62rvIW7KJ2GAt4QYPh1t6
      0fUME0hbSoo5QFlVNdE6H9U1HbiczlmqExygZ3CKBWuWE2wQWL1ggJPNg0Q7zhFWtBbrZCsN
      oyJ01HBySMA5Nlt1gn0MunRsXJGMoCh4J4fpHR7D2d5EVvEyfB0VDFizGKiopUc/iHcO1QnO
      ysq8pWtcs5+LXfggho+/R/Dm/0a4Qce6J3+fw3t28K8/3MOirc+RJLdRXjfMtmefwe7p5le/
      +A1Ja55hXU40WkFAe4mTxGQU0P3BJ7xxRkPMvHWER0ZjnHib115tR4yZhz3gJaDTIyCg12vw
      uPy3cFsyPo+WoJnESXpzEIpvDBE/kqKgoOAPSKQWzLYm2I8smZkpToLJFow46EYM+JEVUGSJ
      gKi7A3WCPWiEmbeiIGA0mfH4/QRm6mjJUgBRNt9/dYIFQU9seCjJaamAgoyJdY88z19851FK
      9+0nYeEmXn75OaL0Xn76P37Eqm/9Gd9YlYf2Km+s0p0fs+6Fv+APf+9b9NWWUFF2AFPOg/zB
      9/+UuIlqGsRITO4h/JLE4IiT+OhbqZ+rJTRcQ2+fA0VRGOntJSgsBK0AigKyJCLLANMVGmcv
      VbgZo8HFuMOHosj0tLYTHh8FTDulJE1X0YSL6ctnx65gFHEYrySjyAGGhsYIDrFN26UoSOJ0
      9UgQkOdoWvWb5boznSBbCNM5kiTqSndS1TWG7HWzdPVmZjbhkNxdtA4rhO/7iFNoWbh2E2J7
      JceOn6Fv0sx7u8ys3/Y4H3z+SxoMkLpoPUuKo+h6/0teeaUCd1QxedEJsDKSn/38V+hMYbxQ
      eCtdrEBiThFlh4+yqx4whLBmdSzC2BR7S/fSYdITMISgM1kxuQbYW3piljTBGgrm51F6bD+n
      BNDYEtgUH8TQVAgV+3dhwos1ZRHG0DjcJ49y0D3BhuK822zTtF2LClI5tHcfGg2EJGQRZw/C
      ZVM4WnIAwTNCwlIBS2QC/aWHqPEUUpR1Z7JYiD43DZUlaNM3kBd7cRPg/E6w5Pcyf9PTTNV9
      SceYjCJLRGQsZvPCeI4dOkSfQ2bJ2o1kxIQA6k7wfcvduRMMDScP0dveiJT3HGlhVXwAACAA
      SURBVA/kfjW5mMLxPZ8TXbyVlFAToDDQdIJGVzRh7jocIUUUp5p4/9MDPPnMk4QFW9X6ACp3
      F7mL17Eo++pV6kVHNwNEkWCfjvORRR+nGwdZkJdMeGQ0E30tNDScxRqZwPlcWqoDqNwjKNTV
      1JFVmIdOIwAKE70NEJGN3SAgBkQMWg1+GTQoyDPjHtUBVO4JxKl+uqespEbZgOkVtZqaNoqK
      MgDo624jKr2AogXzGR/qRJSmlxvUUAiVuwg/pV9+StvgGB4+ocS7nHh/F564xcQJGnKLCjDO
      hDjIgUmCk+YTYZx+xxcu3cDRo/uoL4f5S9dhnNFQqpPg+5S7dRJ8KYrko6W9l9S01Jlhz42h
      CmJU7moErZHMjLRbuoaqCVaZU3i9XiYnJ2etPXUIpDKnmO06weoQSOWuoun4Po7WdyNoDazY
      8g2yYi9WihzrrGNndRdPP/Ig7o7jvHOwAZNOQ96KzRRnxaHIfg599ibBC59gUcq0TkB1AJW7
      irP9Dp598dsEfSUTluSboKy6A5+jH1GGznMdbHzuZeZd8A+FrrpyhibciFNeYNoB1H0AlbsK
      zVQv77zxG975aLoC/Hm6eidJWLCUsJnCZm4xwKEPXuWNdz+mY3gK32Qfp3tkigtTLhNaqT2A
      yl3Fwy/8KYqi0N94mCOljTy+NQ8IMN58lAljAk0t7cQ3d7PskRdYhsJEdwM7ysuI93YwqUvk
      TF0THRotRRlbALUHULmrcFFf20RAlvG6XOhM58sIaUjMX0NyYgKhIXbCQ2w01p/CHZDx+9xo
      dUYKVz/I8vnziIkMJSwqCtPMhtnX9gABRz+VLZMsW5iNHHBQXdvB4uICxrrOUV7TSOy8IhZm
      J6EVAEVhrK+Zssp6bPHzWL4oD4MGJvqa6XAGMT8rHiQ/NcdK6JnSsWz1KqKsOlpOHaeua5Li
      NeuIs5torinldPswaEwsXr2W5Ajr15l3fRSZoe4WmjqHiE3LIS0ufM5ogjsb6+ganiIjv4jY
      UPP1z5kFFMnPudM1jPl05BYUEmq5xTrNtwUTQZpR3nvzGNbYLB5Yn0pD6Q48iStYlJJIJOBY
      upzE6BAm/N18/v6baK2xbN68jnCLgXAg0ujBpkm6MIf42h5AZ7FR9smbdDkCdJR/wZkxgbGW
      Cl755DiLVq4mzCgxk1oFSZrkWPk5ilauYax6Jwfremg6sYdf/PwnfH70LApwaud/Uj0VRVGa
      hVd+9R7NtfvY2+CkOC+Sn/7kVbyixL5PdpC1djObN64hNuTWVEdj3fVUtToomJ/P0LnjNA84
      rjhGnBrmcOXpW2rnRmmpOUqPz8KCwmxOH97FsPfKY7z9DRw72z+rdp08tBsxNIXctAgqDh/C
      eZX0nGPN5dR0u2fVrsvRklq4nBdfepnHtqzApBHRx+WxICnkwhELF63AoIWolAKee+Elnv7G
      FiIshgvfByfkkxN3MYz6a3sAQWvl28+t5tWPd2MeHeVbf55L2Zv/wYL1zxIXEQ4R4ReO1Wjt
      bH/iYUTPJKMTTjKNRjLyN/Okb4wPW6aPMRiNCJIWg16HTqdlqKsTe/w6YtPmkS59Rqvby+Bo
      P0e/+ISMnMWsLc69hR9Kpqejl4IlW7FbBZYU5XDwXB+G7ioCmStJDQpw5HglCSaJMzUd+D3u
      WdIE++kf87NwbTpWvcCaJSmUN/URNdFAePEmbBPNnBkOoOs+zakhAe/kbGmCPYz4rTyQEo2g
      KGQn9tAzOMJEUx0Fa9bhbTpEd3ABQxW1dOmG8RcWsjQv5TbbdH0ErZHM9Fuz45qT4IjcTdjf
      +T1Ctv0/BGsVPH6RcONFb2qs3E/ZjCbYPN7IK699TN7Wl1iTFYkAlw057LGpjOwu4fMOiEhe
      TP7yKGre+IxXO2M41zPOEsXAP/zsdeSAh49+8a/s1Fl5dPHNViKUCfh1GGeGiFqDAUQXska5
      kMlCUQRSc2ZbEyyiSEbOF4XUmczIPv+0xFABFAVFMZI/65pgHxqCLmiC9XojLlFEmYkZnhZs
      Wu7JOsHXmQRriQwLIz4xHtCRlRZPQ30joiTj9XrJXHxeE+zm5z/6FZu/81/Zsij9qvl8Thzc
      xdLHvse3n3+S/tPHcFtS+C9/+ue8+NQDhCUlkxQkMjLsAK2BhNhIXJ5bCdTSEhGpp6tzBFmW
      6e/sxhYRhlYAWVYQ/V5ECQQEZFmaRZ2rmSCTh6FxF4os0dbYTkxiNAIKsiLj93mRFBAEAUmS
      ZlUTLEhDOHwisuilt3+U0NBgQEaRZbze6b+FABfsule47jKoPTKe80OoeSsfpufLT3j1tUai
      k/PYun4pRi1Inn5GPHoqd31A5SWa4PKqJsamOnlvl5nNDz/LJ3tfp0UrkL/6AYK8fXz2ySHG
      pjysePRpbDqJ3Xs/ZcDnR9JH88SiWwlyEojPXkhfWQV7mkV01ihWLo1GmHCzr2w/PUFBaEzB
      aM3B2AOj7D9aycriRbOgCRbIXzCf8oqjNEgS5sg01sSYGHFFUnFwD2adhC15PsbQMOTaY5T4
      nKxfcitDwd8WDUsX51F2YC8yEJ1WQJzdjDtcz+H9+zBIDhLiBKwxaYwcLuGkdz5L7lCdYL9r
      nMpDuzAXfoOiS7JT9HeeZV/JcYyh8WzdugGTb4AdOw4gWmLZsmU9IQaJusqj1DT2kL5wHcsL
      p+1XY4FU5hTXiwU6W13KcGcDzsxneSj/YqVs0ecAvZWuYx/RHLYO3bk9pKx7HPPQKWpGrBRF
      ejg1bGLjilx8bh8WmwWNIKiaYJW7i5yi1eSnxVzxuc8lUlFygJMDWuYn2RkXjKSHBxGdmI7P
      M05XeyN9HQ28/frrHK3rvDCMUx1A5Z5AZzAQFRtLqDZA77gLeeYBn15gUJAFHYUrt/Dit17A
      0VWHxz8tiVQdQOWeQPI7SMvOpSA5iMaucWI0Ps70O+lpa8BsiyIpPp7WxmZE0UdAEtBorrMT
      rKIy9/Bz6NMPaR12EOAj9ntWEO1qxJe8hlhljP2f78UWm8Ej65IxyqHs3/E5XlsKWzdkYdZk
      kO8+wrvv72DJui2YdKomWGUOckN1giUf7d1DpCQnoLmJzcIrBDGKoszJ0pkq9w+yLCOKV8nN
      flW0JCXEIkvShZyqN8plDiCKIuPj4zd5KZW7CUVRZrUe72+Ly+Wa1Y22yxxAr9cTFRU1a42r
      3DnmaloUWZYJC7uVzOA3hjoJVrmr6Gk8SXlNE6LWxroHthJrmw5TGOg6x8EjJ9Hbotm0ZT11
      B9+jY0xGFn3Ykhfx0IJwPtpxAAkdkanz2byyEFAnwfctc7UHuF5irI6WRqKTM/AO1nD0bBAP
      b54OFRH9LgSdmZ7jn9MSsoqNORGAQk/9MTqVVNL1A7QHIliefzGEw3KtGmEqKnORlIws9IEJ
      Kqs6mHfJw+x1eindv5fKAR2FSdMhEnLAw5m2cRZkx6EIEmcrDvLGm29SdqZLTY6rcnfiHm7l
      4x2lZK3cyrxYy4XPDUFBpGVkEKHz0jkyBSiMdp7CEFuIRScQO6+Y73z3ZZ5/+nE6647iF9Wd
      YJW7DpGS0lq2PLyd5EsqPQIE3GPEpaSRFW+mvW8SRZY4eaqXJQumKw31ttTRPTKF3z2OTzZc
      fydYcQ+xq6KdreuKkT2DHDnZz4JkDZ+VVKPVB7FswxbmxYYgCAKKojA10sW+/YeR7Sk8sHEV
      FoOAZ6yLyiYHq5YVoFEk6sr3UtPhZPn6LWTE2vE5B9m3+wDeoCQe3raSkbPl7KtsArTMX72F
      oowrg55+WxRFZqCtgTMtfSRmLSArOfKKzZLz05/br7i6tE2R1tNVtAw4yV20nMQIyxX6iTth
      lyz5aKiqZNino3BhEWFWw5yw63J86AI+vvjgHUBL3rL1GHor8aWsIV5w8tnuQwTHzePhVUnI
      gQkSc5YRPFMJIzImlqOH93LMY2DzQw+i11ynUDbIfPT//QMhD/wRUvlrBIpeZN7IQfZ7c3l5
      VTg//Pc3+IO//N+JsRlQJJEDu79k/poH6Cl9k0q5iIczA3zyyZfU+1P40d/9HiNVH/FafSh/
      /o1MfvqTt3j+j77Hp7/6Neu/9X3ilSk0UVEc+Pn/RcTD/42VyYarm/RbozDcVktVr5aNy7M5
      fXQ/5owVZMdaUTRaNExPAkXHAIfqelm3dAEGg+GmdhNv1K5zJw4yacticWY4JV9+Sd6WJ4gy
      yAhaHYIyrbN2d5/ixFgIq/ISMRp0t+WBu3wSrHDiwJeEFawjMchH6bFaitdvxKKR0Gh1KLKI
      ImgYPnuULlMBC5JsGPS3ZwHxRrNDd/ePk5gQc1NF1a8zCdbwyLe/xaH//CGV7jQemH9xe9pg
      CSfEIOENTO8aC1odmx56lBCth+bOESLD7cRmLeVbT23FbJhuwmiPQO+bYHhkDL01FO9AM/0+
      qD3wMXtr29DJMO70cnz3W3z4xUEmPLeySSPT1z1E4aIC9DoDCxbm0tPVT+fJI7ROBJD8bg4f
      K6Wvo42O1iZO1DbgDczGYliA4UmFvIx4tDozq5Zmcrapn4ZjJQx6wTXYyon6Jtqa22k/d5qT
      Da2zYBOAB4ccSkaUDaM1gnlJwfQPj3LyaDluCcZayqnvn6S5sYPWhhrOdc5uEe+vQ9AaSbrJ
      h/8813RjjTmUIGkcY3jMzGRB5FTpTl7prSB64UZME8288XkVBesfI808yjtvfkT8ku08sCz9
      ymvpLSiuM5yodqGzhiL5XejtCTz2zNOU/uZf2NeQybf/5t9QZJHjX/yat3dZ+MPHl97kbSlI
      ogbdzN1ptDqQZbhM8KUhMTOLTJ+NNUtnSxMsoSh6NDOvHa3egHLFtr+BrLx5TI6FsWrWNMEi
      gnCx19VqdcjyV4ILBDN5BRlYTQsovD/qBMsc+/h1Mp74PwjvPUBNtwPQMX/1g3z3e9/nuQdX
      EpNWyIvffpn5CRY++OXPmLf9O2xfnX+hANmltJ8uJ7xwE489th1hsBGfKQ6DZwyHT8ZkNCBK
      En09XUiKBnuoHcRbiUnSEhltpq21H1mW6GrrICQqHK0GJEnG73biE6c1wZIozqIm2ITV7KNv
      2IEii5yrbyM+ORpBUJBkCY9rClGeHmOLs2qXFZ08wpjbj+R309M/TlioDZCRZQnXlBtFAUHQ
      EBDFe0oTrP3BD37wg6t9IU31s//UGE88tJrMZDslZe1kxQfhMkaTlXD5VrUsuyk7eJQJ5xhn
      amuZFOwEeqrZcbiGyckxegZdrNq4lq7qQ1TWnCMmfwXFRQXEGafYd/Awk6ZUHlw3n46aEvYf
      qaDHaWH7Q2uxmW52nClgDQlnpPUMpxsacekjKcpNxWrRUnP8BAPjLkxWOylJCTj7WqjvHCEm
      JhaD7nYvigmEhdtprq2ivrEFTVQ289Mi0eGlqrKW8SkvwZFxJMRG0nO2hrZRP6nxkbdlDnB5
      4KNAZKiZUyerae3sJSI1n5QoO5J7mFN1TbgDEmFxaUSFBNFyqpIJyUhshP2a179Z3G43QUE3
      3sP4nOMc2reT8pNnCIpKIUgcYd/ePRyvrGVSsZAUbWew4yyf7SslNX0eRp2Gf/qnf/oHdSf4
      PuVu3Qn+Ohq7h5EFHVkxFnySBtE5hFtrJ9Iq8sX7R1j7jVW0NXfR1HiGLQ8/S1iQTi2RpHLv
      YDAOcaK0nkqnm5zVD7E4PQ6rHKDhRAXm1FSCLaEULQhlqLvxsvNUB1C5JzDawtm0/QlCBCef
      flFGUcomju3+FG3iYtbnpX7tZFd1AJV7grEOLxNSP0XRTiRDKIO1JcgZG1mdFX7NZVJ1DnCf
      cq/NARTRw4nDB+lym9m2dS2jZ8s4croDAFt4OquXxnN47xFcAQUEgVUPPkN+UqigOsB9yr3m
      ADfDFZNgWZbx+/2z0rjKnWWu/q0lSZpVu65wALf7TuZ/V7nfURTlyl3o28hlDqDT6WZVj6mi
      8lV8Pp+qCVZR+Tqcg23sOXgMt2xi4/ZHibdPxzA5J0bY8f4XLHj8SbIjbASmhti9+wCjLoWl
      G7eRESazd+duBqdkijc+RF7itJOpDqByFyFx6Mhx1m5/mjAzSMrFx1fWBgizBeHzTwcXVpYc
      InPNIzwUZiAgQ1vtIUKy17I5zcAnXx5jXtx2QHUAlbuKcTrP9ePyv8eUO8CyB58iP3663pfd
      FktsmO1CBaCGjlZC3Z9yzOEha/lWzO4p4jNiMATpsAaJSDMF7lQHULmL0GCPSeHx5x5DcvSy
      52gV+fHrr3qkzhbNw08+h9Y7ynv7askMERAlCdAhiQHO746pDqByFxGK3TRAY8844e52NNZo
      FFlGQQBkRElCEUUkSWZhpJ59p3tYEeEEnYnYCDMnz9QTlqnBIUdj0F1PEukb4cuSc2zbspKx
      luMc7NTx9OZFtFQdQ47Ppr9iD62jPnQGE8s2bScrdrorUmSJznNVlJ1swBQzjwfWL8Okkehp
      rKLZGcrGpVkE3OMcPrCPPqeW1Rs3kxJl4Is3XmdU0mMIiuChx7bj76tj/5FqorOKWbskG53m
      xkKCFTlA57kzNHYPE5OaR35GPFrNVzXBMqIoo79N8r6rIYteztZW0T3qIj1/CRnxoVdqb2UR
      Udagv+3h2RcRfU5qTpxg3K8jb+Fi4sKu1CrLUgAZHTrt7ZOOXi85riJOUbJzN1OWJLatX8Tp
      /Z+gzNtErKeRgyebAMhYtIFl2dFUH95FuyuIzZvXYTfA2crD1A0obN26lmCjDmFG0P41TCk/
      +Ov/pkz4Asqh1/9D+dv/9zXFKXmUN3/8P5QzvcPKv/7jf1d6xjyKa+CE8r/9/a8unOV3jCiH
      jpYpU16f8vnPfqDsPD2kNB3fq/zsn/9G+btf7lEURVFKP/iJ8s6hBsXZV6v83z/8leJyNCt/
      9Xc/v3CNgHNA+fd//helY2xSefNH/6RUtI19vZlXRVYGmiqVfeUNSkD0K6eO7lFOd4wqAa9b
      8YuyIsuS4va4FUd/q/LZ3sPKyNiEIkryDbZxM8hKXfk+paqpT5ECHuXwFx8qXQ5R8XncSkBS
      FCngVzw+rzJ8rlzZUVanjE44FVmeHbtKd36stA07Fd/UiLJ3xy5l1CMqHrdbkWRFEX1uxRsI
      KG3HdyoHT3UrE073bbOkr6/vt7da9CndfYPKzf5CcE1FmIV5oRItEwHaAhY2xPvp6ptgxGsh
      JsICoofO9hYqj9eRUXCxkJveFs7alcuQxrtoGoG4MBOZxZt5dN38C8dExMYz1d9Bc2s3YbGx
      CM4pJHGIV155hX3l9UyM9+EKiiUpNJiC7AiaWoZu8D0iM9A7St78bHRaPXkFWfT3DtBdW067
      I4Dk91B2vIKJkWFGhwbo6O7DL81GRIifMadAVmoMGp2JpYszaWrpp/H4UYZ94B5up/pcO8OD
      wwz399DRNzwLNgG4mSKM1AgrBks485JDGBgapfpYxYwmuIL6gSkG+ocZ7Omgb2Ryluy6NoLW
      QEJs1O3TBBfkx3GmqQWEENJS9dTUn0UIjSHUAIh+hgYHMSlGtIqPwabj7CxvZcXmbRiHz/BJ
      yRk2PPs9CuJsX7mqgiwr+D0O+ocDaLURaKLn82//PB/RPcaPf/gvWB57AkWZGaMJ3NTOoCxr
      OD/iEQQNyMoVmuCY5BSSnAYWFebc8PVvDhlF0V74gwkazbRW+TL0pGSkMBQWRlHObGmCJYRL
      fpzzqW4ux8S87FR0piJy7pc6wRl5+TSWfIYmOofQ+GQ6Ko4QFps2/VOZ7CxZtpING5dSd7KK
      6HlLefml50mzenjn44Nsf+FlFmbGcuXQXaLxbBMZRSvZtGkFfecaGBvsoXvYiaDRYjAYCA6J
      wewdYsDporltnNTUyBu+rahYK81NXUiSSGtTK+GxkWg1IIoyXuc4Hv9MPd5AAGkWNcF2i5/O
      /jFkyc+Z060kp0YjCDKiJOJ0TOCXQCNoCPj9yLI8S3bZMCgjDDi8iF4HHT3jREbYAQlJEpkY
      n0RRQCMI+P0+ZPneiZ+8Zg9gSswjTnuY+fPTsYS4CIuyk5+XAmiYlxDKjg/fQqeBZ7/9/IVz
      fD4PNouJw1+8x1Fg4bpHCbSVUHO2F5NngA932Vj/yBOUlBzkrWqFB597klCrnv17vmTflI/s
      zd8kJyUe8wOL2f3+OwSnrqY47Ua3xgViMhYwUVvNvn1nsUenUJQcgRCRzaHyEoasYURGRaI1
      hxBv9nHwaCUrihdjMd7uvEACuUXF1J6sYU+dj+i0RaSHGZjMSKG89ABWq5nwBAuGiBisjWUc
      Pulm3azUCRZYtnIZlZVHqJU0pOUsJtJixJcQSlnJQexmC9FmDbbwHHylFVSJeSzJSZoFu357
      uluq2V96CsU3gZCwhpe25VNbuo+qYQO//9SWmaNkKne9ToNYwIsPLwJUPYDKHONGSiRdjbNH
      v8SVuIpc8ziNg25ONbbw7ScfBWC0tZqK5i5GXTG88MQytGqdYJV7CnGSswMC+Ql2gqJSKcxI
      wDAzBpe941ScHWTl4lwuXcVVN8JU7hEUWquPE1uwGONV9inOHNlJVf0wQ70N1Da7mDc/A1Ad
      QOUeQRGd1HV52fBIJAIgBny4XC58Pi8ul5v8zd9k/hZgqpW39g6zKH1adaYOgVTuCQIeLwUr
      VmGbyUU71lnP3pJjWHUC+w+XMXVe/WmMYMmClItL0eokWGUucauT4BvhijrBkiTh9XpnpXEV
      lavh9/txuVyz1t4VcwC1UPb9wVwVxQcCgTvnAFqtluDg4FlrXOXOMVfToni9XqxW66y1p64C
      qdxVTPY2sufISUTBxJoHHiYhZFoTPDk6yGfvfM6SZ54hJzKY5upDVNb3ICoCBSs3sTA9GiUw
      xYf/+ROi1n+PtVmqJljlrkPkyPEzPPCNp7EaBORLFjG1QVrSE6ORZqo/JuUuJW3BWnxjHew6
      eY6F6VE0nDyGPTYRSbpYlER1AJW7iAm6z/aw2/8+U1NuirY8zYKZmsBWcwQhFuMFTbBO52XH
      m+8zipH1Dz7M1GAL3d5IClPh0vzQqgOo3EXoCE/K4PGnH0JyD7OvtIYFSeuueqRGG8L2bz5P
      Z91xTlTXYOk9SbsYSkdVK4OafrKSvjlzRRWVu4YQwi0j1DR1E+prxRCaiOj3IQk6BMmLw+VC
      mRhnKiSInuY67LGJ6M1mfB4HT738ZwjA0Jk91GsXEmfVA9fYCFOmenj/YCtPbl+DIPvY+/kO
      kjPj6QtEs7EokYPvv4Jl0RMsTbfzyYef8/CTj6MDFMnPudoKqupa0YYk8dDWtVi1/6u9cw2q
      4kwT8NPdp/vcD3AOF0FAURQQUAQE0QiJlySlZnKbzVRSmcnWzk7tbu2lamr/7I/dqpnaS83+
      nNramtpUdjM1U8lky7jJJDE3ExVvQQJyUSSAIoIgl3PncO7dvT+OMUGjCRpBk/P87Oru7/u6
      v7f7e9/vvSTo7zzGcHw5jzWX03fyIO0DV9ASUcKmfJ5sLOLjk72oukZwNsITP/kpEyfe4MyV
      KIrBSPNjT7A62/pV3bwpWjLG0NluRiZ9OAvXUFNRgizN3/jWtSSRWBKL2XRbr+N2mBm5gOYq
      IM9uXrQ2v4rrrUCxOS89Xb2EkhKrK9ZTnJdxQ6SVGo+QEIyY5LvnQPB1yXF1NUzH8ZOEzfls
      rS+j9/C7KOUPkRu/REf/KACF5fUUGgN0njmPaHGyqaEehykV8BPxjuMXneRnmm9dIUawOPF0
      /TcXW7aQ6z9D14RKXZ3MW2+eYHPJZob9CejoY6PdwekxlSevdTCBbs7lqR/V8/qv/5mO8hq2
      FeoM97bTLjTwWHMllVsepXKLyrF9LzGWtZL8tTW8UFbL1NkjvNw6RY4xzP6Ofmofe5ay4gKW
      uRYagaQz0tfOnHk1O3fVMj7QReeAwio5QDK/nDyjyrnBQYxz03zYNUJZRSVNjZuwGaWvv/Ud
      MuueQbXmYPJdon8mRGDGTfG6TVQUu+562zcnSeepTlbXPoDTlKS3uxdZ2cDcxBhF5RUkJvvx
      mvO58OH/cVnOp7KykrrypYkHECQLm1p2AqnEB0UbtpGdbUegit0lVV86M5ddy9fccL3ZuZwv
      f3puLsqihZaGPNp6LjN4+hQVTc24couxRGcYGBhleU0z5vAIw329rKqpxT85Qmd3L4GETOnK
      PFrffIXZZVvYVJKJbM2mbv38zsR9oxw6F2TH5kokIZWh4cBbB2jZsxeLYmX3k4+jhCd57cX/
      pOfyQmNQVXzTcYpXFyBJMsUriwi6/YS804QSGrqWZNrtpaSiior1texq3rwok//LxAJuyFrB
      9pYmZsYvLmrbNxIiqjnJyzQjm+zkZ1vxB0N4Z9yoOsRCbgJREzV15VQ3tCzZ5L8eQZTJyb4x
      q8ZCuOW/rKxhKyNdHZwe9LGpMg/RlMlyF3SeGyc/dzk2k0B79yhV64oQRBGDZEBQw+x/+UUi
      +Y387Pm92JWvmlg6Z058xLKNLeRcXYtFLnfQlyxj00obSEbKqmvZum07D6yz03/Bu+BhWe0a
      Pn/qFz/n92KwWe8xzz+JbFcWkmRAvotLim+GFVX1oQLoGrOBIGbr0i7RFotbKsEGVwW20P8w
      adpIgUkAZFYtd/HBx+fZ/UMHhiwDvzoZ5wmXAYehmA25MDtxlrbeUZpLJjh0cILSmi2oEz10
      dfQzMWblaHshjdU5HO2eYu9fVl+blB+98Rbbn/o5BiA+5+X9999HMjsYGtbZ85O8BQ5LpGht
      Occ+OYzHlYHPN0vt1mbkaQ8nuz7FbYjiDRuQZDOqb5z2XhPVFWWYl3wiLhUyawvttB77BJus
      EtYz2OK0ETBE6TndQXh8mOxNmzDZnVzu7cCml7OmOHepOz2PWMjP6dNdCBmF1FeXcqmvnYtT
      swBYXcU0rC/i7KedzISiyBnL2FpXCXwDb9CQ301CspJ1VWlLROfwh+I4XVnosTncoTh5rsxr
      tWzVRAyP20Py6l3tWTnoER+haGrzQVIsZGdZCQbDODIzrkXnBDxuzFnZErFEFAAACWNJREFU
      KGIqR3wkFCAQimC2ZZJhM7PgUrm6TiwyRygSw2SxYzEpoCcJ+AMgm1AMEhaTkWgkRDiuk+Gw
      35A4626QiEXBoCCqcTSDEYOgE4snMBmNd73tL3O9EqzrGnPBIHFNwO6wI0siiViE0FwUxSgj
      G63Ikk4oGADZjN1ydwwHt1sh5tLUCIGQAJc7mXA0srXESCiSIBa4QttgkKcfKGZ/2xgtG9ci
      ymZyXBnYbbZ0iaTvK/eqL9DtCsCIZxxZdsFQK71SFY/WLEdAo//4ByRWbaMw8hm/O/AJywtL
      aGh+kOJsG7Z0neA09zXJKMcOvYc76aKqagXHjuwD0cDmXZkAJMI++n0GHs+3IVLLX//VBpIR
      H6/te4OnfpzKZJIWgDT3LwYT2x5OGeBjE+2sfP55hOhF9r3dQ+kzTYyeaaOwuhlJSC09VUHB
      ZHOR6zCSuJqQLC0Aab4TzKhODr/6CmhQ89BedC3GkEdmZ2MqM+GcZ4yDrR1E43HsRRvIUlJT
      P60DfE/5rukAt4PVak3nBUrz/WbeEigej+PxeJaqL2kWEX2Ry5F+UyKRCF7vQjc+b5/0EijN
      PcWSZoVIk+Z+4MpQF8nsSoqylGvHLvQc5+xIavVSuXkHeaKHT9p7wZpDU9MmPEPt9FxI1ZlQ
      nIXs2lILpK1Aae4zzp48QE93D5nNq+YJQEFpNZmFSc60vkdY03H7glTWNRKbHuLAoTaeaK7G
      nr8W4m7ePnwePV0kL839SEXjo+Rbk7Rdd9xszcAke3CTzZZcG/KyKtRElHPngzhdJZisDkxW
      nXPHT7Fha9O1mnNpK1Ca+wpJkm7i/qwz2NHOipp6FElAU/288+r/0j0SIMeZ2hnW434+m9Ip
      /1JhwrQApPlOoMX99F/RWFeUCiyKxxV+8MILPPeDZk53daIBwz2d5FfVYjZ8IUI3XQLpyQhT
      /hh5rkxAwzszg2gQ8PlD1y5dVrQciyyBrhOPhpicciOZ7CzLdSGJAonoLP45nWyXgznvFNP+
      VMYvSTaRX1CAGvYy5QmSlZOPw2pEi4eZmJhCsbvIdTnuKNABXScyF8A/G8HiyMJhMS3co/Qu
      EI+EQTaiGBY3AOfr0HUVv8dNTBXJcjoxyvdW/1LEOfLm63w2fB63MIUx0ky5dZaAYw2uiJeC
      qo1Y5dRL7mv7kLOjfnREKuofQtQijHkFajfMd62/eUxweJR/+Ld9/PIXP0dKePn3f/0NP/qz
      pxnqPMV77Zd4fM+j1DbW4jQraGqC9/b9Dsm1gon+blbueI4au4/XX3uFYamOf/n7p/EM99E/
      OsOc+yLvnZzgF//0U/b//jWKSlfSM+Dj7/7mx7S++h/4MsoIjAzS8syfU1lw+xnCQp5LHG8f
      JDcvi5lpL+s3byM/c36Qhxrxc3bUy4ayVbfdzkIZ7mhDXbGONTn3Vga+811HuRRSyFCS+KJG
      mh/YxPVBcrPjfUwqpazJuXuu2wsxg+pqlNOdPZRtbMAmL/zrdkszqGAppNzi40IwSYH3LFJx
      PWtWrSNXitMzKdH84GY+18EFUWLHE89jlEU+vtLLlHcOOT+H7S2NXG5LAJC3qpK8EpWTb/RT
      98heYmPdxJzVPLp7B+GBf+TM5CQn+hP88le7GT4apLVzgMqCugUPKoXG5cEBShsepNSlEL7S
      T9uFCQRLkGRhNfmmJD3n+rHFvBzrGmF6anrRYoI/x3/xDD2TISJ+HwVr61i/eqFBP98mCYbG
      wzy8txlJ1/iso5Uxd4DY+EVWbaghNtbNjHUFw4eOMmq4gHf9ehorVy5hf1MIkom6hsY7usct
      dACRpvqVfNozykB3D9WN9Tec4Zs4z5HDh5kIJDEQ5cAfXmJQXMueTSXYnbnYTfK88xNhN0e7
      p9jRVEk4FMAgWxABm0XD7/cRU80YAJNVYS4QuqG9b47GXEgiMyMlopaMTJJzYcJBH+Gkhq6p
      +PzBJY0JjoeC2Aor2PnQAwTdlxe17RsJIUnOVPVPQcTucBAJhwl4fah6yq14NmamvqGKmi07
      74nJ/21xSyV4TcNWLnd/Stf5WeorbnRQMtmdrCwpwa7o/PGlXxMtbuZnz+7BYfqqH4vOxU8/
      RlrbQpHDgM3hJBENogL+WZHs7GzMUog4EA5EcDgz7mBYEnaHhsebSvU+63Ej2233mMYvkuGw
      IYoS0leU9Flc7CST7msxwT6vD6t9YWlo7lduuQ8gZZbhmPsN09ZG8pQbX5LZ7mSl3UkyNs7B
      IwM05fTxxv4+Smubsfr7OH7sFJeG4rz+QQHPbK/hg8Pd7P7bHyIAeaV1ZLT+lt+/fIlJy3qe
      zMklXJ/Jf734MrHZEE/9adkdDEugqLyK1qMHGbeaCUVhS3MZhhkfh062MqaoeJJmJMWC5r3E
      kVPQsHEDFuXeEpHFw8D6UhfvHvgQs6wi2JbT4rQRkMMcP3KI+PQQBduaMGfmcPHEYeTYBmrW
      Fi51p+cRn/NzorWVWTmHXQ9uxiQm6T55mGGvSlPzdgqyUiGcY+dO4TaWsHF1Kqb5a32B4rEI
      miBjuuo/rWsq8aSKoijXrDS6rhGZC/O5a5VsNCFoCeKJq7UGRANWs5FYNIZiMl0rnq0m4kTj
      CRSjCYNBAi1JJBJDNCgYjfIdW4FUNdUHg6xgkCRAIx6LgWhAEgUMkkQymSCp6SiKgrgIZiJN
      TYIgga6CmLJpq5p2tX9Lh67rJOIxNF1AVhQkUUC7+vwkSUSUZEQBEvHU81Pku7OHeru+QJOe
      aSJxCaOni2NThWxZ5mNaLqbEHuadI4M89+weVN8I7+z/I+6iHfzFI1XfzBdIMc63nAiihPG6
      VCeCIGK5Iae7AeU6Y4Hpugxskqxglb/YzkY0YLF+Sw9WEJAMCuZ5txMxmuaPxyAri7odLkqf
      t/ZFq0s9+QEEQUAxzn8/oiRjkubrcdefc6+wzJWDrmlcHEuQ5bJRuK6MQiAw3o/R7kDUYhw9
      1k1j82YOjn5xXdoVIs39SzLKkQ/fZibp4pFdjXR99C5hVwUP1y8HNAbaD3N6QuOxPbsYPdNK
      KKMYozpLOJggEk+tTtICkOb+xWDiwd1/AsD5S2M4qh6iuSQbAZg6d5KBRAHPPrkOAfDJZoTg
      OG2XxxgdE7niT3uDpvkOISQv09H6Gd1HYE39ToSBIcaD5/nt0CkyCyvZu6uR4nWAZxD9vMSq
      3FS+2XRATJp7isUOiPm+2v3SpAHg/wE3g8GH34l+CwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='Tree map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='map chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='word cloud' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
